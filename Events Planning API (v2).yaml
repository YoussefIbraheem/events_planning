openapi: 3.0.3
info:
  title: Events Planning API
  version: 1.0.0 (v2)
paths:
  /api/events/:
    get:
      operationId: api_events_list
      description: A simple ViewSet for listing or retrieving events.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: api_events_create
      description: A simple ViewSet for listing or retrieving events.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: api_events_retrieve
      description: A simple ViewSet for listing or retrieving events.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_events_update
      description: A simple ViewSet for listing or retrieving events.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_events_destroy
      description: A simple ViewSet for listing or retrieving events.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
components:
  schemas:
    CreateEvent:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        coordinates: {}
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        date_time:
          type: string
          format: date-time
        tickets_available:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_price:
          type: number
          format: double
      required:
      - date_time
      - description
      - location_type
      - ticket_price
      - tickets_available
      - title
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        coordinates: {}
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        date_time:
          type: string
          format: date-time
        tickets_available:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_price:
          type: number
          format: double
        organiser:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - date_time
      - description
      - id
      - location_type
      - organiser
      - ticket_price
      - tickets_available
      - title
    LocationTypeEnum:
      enum:
      - seated
      - general_admission
      type: string
      description: |-
        * `seated` - Seated
        * `general_admission` - General Admission
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Register:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - password2
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
