openapi: 3.0.3
info:
  title: Events Planning API
  version: 1.0.0 (v2)
paths:
  /api/events/:
    get:
      operationId: events_list
      tags:
        - events
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
          description: ""
    post:
      operationId: events_create
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Event"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      security:
        - tokenAuth: []
        - TokenAuth: []
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
          description: ""
  /api/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this event.
          required: true
      tags:
        - events
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
          description: ""
    put:
      operationId: events_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this event.
          required: true
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Event"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      security:
        - tokenAuth: []
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
          description: ""
    patch:
      operationId: events_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this event.
          required: true
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEvent"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedEvent"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedEvent"
      security:
        - tokenAuth: []
        - TokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
          description: ""
    delete:
      operationId: events_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this event.
          required: true
      tags:
        - events
      security:
        - tokenAuth: []
        - TokenAuth: []
      responses:
        "204":
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      tags:
        - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Login"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Login"
        required: true
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
        "401":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
  /api/logout/:
    post:
      operationId: logout_create
      tags:
        - logout
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
  /api/register/:
    post:
      operationId: register_create
      tags:
        - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Register"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Register"
        required: true
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
  /api/tickets/:
    get:
      operationId: tickets_retrieve
      parameters:
        - in: query
          name: date_from
          schema:
            type: string
            format: date-time
          description: Filter tickets for events occurring on or after this date.
        - in: query
          name: date_to
          schema:
            type: string
            format: date-time
          description: Filter tickets for events occurring on or before this date.
        - in: query
          name: event_id
          schema:
            type: integer
          description: Filter tickets for a specific event by its ID.
      tags:
        - tickets
      security:
        - tokenAuth: []
        - TokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ""
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        coordinates: {}
        location_type:
          $ref: "#/components/schemas/LocationTypeEnum"
        date_time:
          type: string
          format: date-time
        tickets_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_price:
          type: number
          format: double
        organiser:
          allOf:
            - $ref: "#/components/schemas/User"
          readOnly: true
      required:
        - date_time
        - description
        - id
        - location_type
        - organiser
        - ticket_price
        - tickets_amount
        - title
    LocationTypeEnum:
      enum:
        - seated
        - general_admission
      type: string
      description: |-
        * `seated` - Seated
        * `general_admission` - General Admission
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - password
        - username
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        coordinates: {}
        location_type:
          $ref: "#/components/schemas/LocationTypeEnum"
        date_time:
          type: string
          format: date-time
        tickets_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_price:
          type: number
          format: double
        organiser:
          allOf:
            - $ref: "#/components/schemas/User"
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
        - email
        - password
        - password2
        - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
        - id
        - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
